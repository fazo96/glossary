package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.File;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import util.FileUtil;

/**
 * The User Manual interface.
 *
 * @author Gian
 */
public class UserManual extends javax.swing.JFrame {

    /**
     * Creates new User Manual window.
     */
    public UserManual() {
        initComponents();
        // Display the window at the center of the screen (fixes error on linux)
        setLocationRelativeTo(null);
        tabs.addChangeListener(new ChangeListener() {

            // Every time the selected Tab is changed...
            @Override
            public void stateChanged(ChangeEvent ce) {
                setScrollBarToTheTop();
            }
        });
        loadManual("UserManual");
    }

    public void setScrollBarToTheTop() {
        // We're sure it's a JScrollPane because we only have JScrollPanes
        JScrollPane pane = ((JScrollPane) tabs.getSelectedComponent());
        // Reset the Scrollbar so it shows the start of the file
        pane.getVerticalScrollBar().setValue(pane.getVerticalScrollBar().getMinimum());
    }

    /**
     * Loads .html files in a folder and displays them in the window.
     *
     * @param folderpath the path to the folder
     */
    public void loadManual(String folderpath) {
        // Check if folder Exists
        if (!FileUtil.folderExists(folderpath)) {
            return;
        }
        for (File f : FileUtil.filesIn(folderpath)) {
            // For each file in the given folder
            if (f.getName().endsWith(".html")) {
                // If it's an html file, add it to the UserManual tabs
                addHtmlTab(f.getName().replace(".html", ""), FileUtil.readFile(f));
            }
        }
    }

    /**
     * Adds a new tab containing the given HTML text.
     *
     * @param name the name of the tab
     * @param text the HTML to put in the tab
     */
    public void addHtmlTab(String name, String text) {
        JScrollPane container = new JScrollPane();
        JTextPane htmlViewer = new JTextPane();
        // Put htmlviewer inside container so the user can scroll
        container.setViewportView(htmlViewer);
        // Show Vertical Scrollbar only if needed
        container.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        // set the HTML viewer settings
        htmlViewer.setContentType("text/html");
        htmlViewer.setText(text);
        htmlViewer.setEditable(false);
        // Finally add the tab with the container
        tabs.addTab(name, container);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();

        setTitle("User Manual");
        setMinimumSize(new java.awt.Dimension(400, 400));
        setPreferredSize(new java.awt.Dimension(400, 400));

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 370));

        tabs.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
